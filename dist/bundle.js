!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(r,i,function(e){return t[e]}.bind(null,i));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e){t.exports={euclidean:function(t,e){for(var s=0,r=0;r<t.length;r++)s+=Math.pow(e[r]-t[r],2);return Math.sqrt(s)},manhattan:function(t,e){for(var s=0,r=0;r<t.length;r++)s+=Math.abs(e[r]-t[r]);return s},max:function(t,e){for(var s=0,r=0;r<t.length;r++)s=Math.max(s,Math.abs(e[r]-t[r]));return s}}},function(t,e,s){var r=s(0);function i(t){this.centroids=t||[]}i.prototype.randomCentroids=function(t,e){var s=t.slice(0);return s.sort((function(){return Math.round(Math.random())-.5})),s.slice(0,e)},i.prototype.classify=function(t,e){var s=1/0,i=0;"string"==typeof(e=e||"euclidean")&&(e=r[e]);for(var n=0;n<this.centroids.length;n++){var o=e(t,this.centroids[n]);o<s&&(s=o,i=n)}return i},i.prototype.cluster=function(t,e,s,i,n){if(e=e||Math.max(2,Math.ceil(Math.sqrt(t.length/2))),"string"==typeof(s=s||"euclidean")&&(s=r[s]),this.centroids.length<e){var o=e-this.centroids.length;this.centroids=this.centroids.concat(this.randomCentroids(t,o))}this.centroids=this.randomCentroids(t,e);for(var a=new Array(t.length),l=new Array(e),h=0,u=!0;u;){for(var c=0;c<t.length;c++)a[c]=this.classify(t[c],s);u=!1;for(var d=0;d<e;d++){var f=[];for(c=0;c<a.length;c++)a[c]==d&&f.push(t[c]);if(f.length){for(var y=this.centroids[d],v=new Array(y.length),g=0;g<y.length;g++){var p=0;for(c=0;c<f.length;c++)p+=f[c][g];v[g]=p/f.length,v[g]!=y[g]&&(u=!0)}this.centroids[d]=v,l[d]=f}}n&&h++%i==0&&n(l)}return l},i.prototype.toJSON=function(){return JSON.stringify(this.centroids)},i.prototype.fromJSON=function(t){return this.centroids=JSON.parse(t),this},t.exports=i,t.exports.kmeans=function(t,e){return(new i).cluster(t,e)}},function(t,e,s){var r=s(3);$("#file").change((async function(t){var e,s=t.target.files,i=new r.Kmeans,n=await(e=s[0],new Promise((t,s)=>{let r=new FileReader;r.onload=()=>{t(r.result)},r.onerror=s,r.readAsDataURL(e)}));$("#color").attr("src",n);let o=(await IJS.Image.load(n)).colorDepth(8),a=o.getPixelsArray();var l=a[0].length;let h=parseInt($("#color_count").val()),u=await(c=h,new Promise((t,e)=>{var s="https://api.noopschallenge.com/hexbot?count="+c;$.ajax({type:"GET",url:s,success:(e,s,r)=>{t(e)}})}));var c;let d=[];for(var f=0;f<u.colors.length;f++){var y=(v=u.colors[f].value,g=void 0,(g=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(v))?{r:parseInt(g[1],16),g:parseInt(g[2],16),b:parseInt(g[3],16)}:null);d.push([y.r,y.g,y.b])}i.cluster(a,h);var v,g,p=[];if(3==l)for(var k=0;k<a.length;k++){var m=a[k],x=i.classify(m);p.push(x),o.setPixel(k,d[x])}else for(k=0;k<a.length;k++){m=a[k],x=i.classify(m);p.push(x),o.setPixel(k,[d[x][0],d[x][1],d[x][2],m[3]])}$("#result").attr("src",o.toDataURL())}))},function(t,e,s){t.exports={hcluster:s(4),Kmeans:s(1),kmeans:s(1).kmeans}},function(t,e,s){var r=s(0),i=function(t,e,s){this.distance=t,this.linkage=e,this.threshold=null==s?1/0:s};i.prototype={cluster:function(t,e,s){this.clusters=[],this.dists=[],this.mins=[],this.index=[];for(var r=0;r<t.length;r++){var i={value:t[r],key:r,index:r,size:1};this.clusters[r]=i,this.index[r]=i,this.dists[r]=[],this.mins[r]=0}for(r=0;r<this.clusters.length;r++)for(var n=0;n<=r;n++){var o=r==n?1/0:this.distance(this.clusters[r].value,this.clusters[n].value);this.dists[r][n]=o,this.dists[n][r]=o,o<this.dists[r][this.mins[r]]&&(this.mins[r]=n)}var a=this.mergeClosest();for(r=0;a;)s&&r++%e==0&&s(this.clusters),a=this.mergeClosest();return this.clusters.forEach((function(t){delete t.key,delete t.index})),this.clusters},mergeClosest:function(){for(var t=0,e=1/0,s=0;s<this.clusters.length;s++){var r=this.clusters[s].key;(a=this.dists[r][this.mins[r]])<e&&(t=r,e=a)}if(e>=this.threshold)return!1;var i=this.index[t],n=this.index[this.mins[t]],o={left:i,right:n,key:i.key,size:i.size+n.size};this.clusters[i.index]=o,this.clusters.splice(n.index,1),this.index[i.key]=o;for(s=0;s<this.clusters.length;s++){var a,l=this.clusters[s];i.key==l.key?a=1/0:"single"==this.linkage?(a=this.dists[i.key][l.key],this.dists[i.key][l.key]>this.dists[n.key][l.key]&&(a=this.dists[n.key][l.key])):"complete"==this.linkage?(a=this.dists[i.key][l.key],this.dists[i.key][l.key]<this.dists[n.key][l.key]&&(a=this.dists[n.key][l.key])):a="average"==this.linkage?(this.dists[i.key][l.key]*i.size+this.dists[n.key][l.key]*n.size)/(i.size+n.size):this.distance(l.value,i.value),this.dists[i.key][l.key]=this.dists[l.key][i.key]=a}for(s=0;s<this.clusters.length;s++){var h=this.clusters[s].key;if(this.mins[h]==i.key||this.mins[h]==n.key){e=h;for(var u=0;u<this.clusters.length;u++){var c=this.clusters[u].key;this.dists[h][c]<this.dists[h][e]&&(e=c)}this.mins[h]=e}this.clusters[s].index=s}return delete i.key,delete n.key,delete i.index,delete n.index,!0}};t.exports=function(t,e,s,n,o,a){s=s||"average","string"==typeof(e=e||"euclidean")&&(e=r[e]);var l=new i(e,s,n).cluster(t,o,a);return void 0===n?l[0]:l}}]);